// convex/mailer.ts
import { action } from "./_generated/server";
import { v } from "convex/values";

export const sendConfirmationEmail = action({
  args: {
    recipientEmail: v.string(),
    recipientName: v.string(),
    // --- IMPORTANT: These arguments are now expected from the frontend ---
    purchaseDetails: v.array(
      v.object({
        id: v.string(),
        name: v.string(),
        price: v.number(),
        quantity: v.number(),
      })
    ),
    totalPrice: v.number(),
    // --- END IMPORTANT ARGS ---
    // You no longer need to pass htmlContent and textContent from here,
    // as the backend now generates them based on purchaseDetails.
  },
  handler: async (ctx, args) => {
    console.log("Convex: Initiating email send request to backend for:", args.recipientEmail);
    console.log("Convex: Arguments received by action:", args);

    const requestBody = {
      toEmail: args.recipientEmail,
      toName: args.recipientName,
      subject: "Payment Confirmation!",
      // --- IMPORTANT: Pass the purchase details and total price ---
      purchaseDetails: args.purchaseDetails,
      totalPrice: args.totalPrice,
      // htmlContent and textContent are now generated by server.js
    };
    console.log("Convex: Constructed request body:", requestBody);

    const backendUrl = process.env.BACKEND_SERVER_URL;
    if (!backendUrl) {
      throw new Error("BACKEND_SERVER_URL is not set in Convex environment variables.");
    }

    try {
      console.log(`Convex: Fetching ${backendUrl}/send-confirmation-email with POST method.`);
      const response = await fetch(`${backendUrl}/send-confirmation-email`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(requestBody),
      });

      console.log("Convex: Raw backend response object (check status, headers):", response);
      
      // Attempt to parse response as text first if not OK, to get more details
      const responseText = await response.text();
      console.log("Convex: Raw backend response text (before JSON parse):", responseText);

      let responseData;
      try {
        responseData = JSON.parse(responseText);
        console.log("Convex: Parsed backend JSON data:", responseData);
      } catch (jsonError) {
        console.warn("Convex: Could not parse backend response as JSON, it might be plain text or HTML:", jsonError);
        // If it's not JSON, we'll just use the raw text as data
        responseData = { message: "Non-JSON response from backend", raw: responseText };
      }

      if (!response.ok) {
        console.error(`Convex: Backend responded with non-2xx status: ${response.status}`);
        throw new Error(`Backend error ${response.status}: ${JSON.stringify(responseData || responseText)}`);
      }

      // This is what is returned from the Convex action to your frontend
      return { success: true, message: "Email sent via backend", data: responseData };

    } catch (error: any) { // Kept 'any' as per previous request to not change type annotations for TS files.
      console.error("Convex action failed to reach backend or process response:", error);
      let errorMessage = "An unknown error occurred during email sending.";
      if (error.message) {
        errorMessage = error.message;
      } else if (typeof error === 'object' && error !== null) {
        errorMessage = JSON.stringify(error);
      }

      // Return an error object that the frontend can handle
      return { success: false, message: `Failed to send confirmation email: ${errorMessage}` };
    }
  },
});